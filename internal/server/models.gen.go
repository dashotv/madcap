// Code generated by oto; DO NOT EDIT.

package server

import (
	"fmt"
	"strings"

	"go.uber.org/zap"

	"github.com/dashotv/grimoire"
)

func setupDatabase(s *Server) error {
	db := &connection{
		log: s.Logger.Named("db"),
	}

	if col, err := grimoire.New[*File](s.Config.Mongo, s.Config.Name, strings.ToLower("File")); err != nil {
		return fmt.Errorf("failed to create File collection: %w", err)
	} else {
		db.File = col
	}

	return nil
}

type connection struct {
	log *zap.SugaredLogger

	File *grimoire.Store[*File]
}

type EmptyResponse struct {

	// Error is string explaining what went wrong. Empty if everything was fine.
	Error string `json:"error,omitempty"`
}

// File represents a file in the file system.
type File struct {
	*grimoire.Document
	Path       string `json:"path"`
	Size       int64  `json:"size"`
	ModifiedAt string `json:"modified_at"`
}

type FilesResponse struct {
	Count  int     `json:"count"`
	Result []*File `json:"files"`
	// Error is string explaining what went wrong. Empty if everything was fine.
	Error string `json:"error,omitempty"`
}

type IndexRequest struct {
	Limit int `json:"limit"`
	Skip  int `json:"skip"`
}

type KeyRequest struct {
	Key string `json:"id"`
}
