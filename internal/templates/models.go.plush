// Code generated by oto; DO NOT EDIT.

package <%= def.PackageName %>

import (
	"fmt"
	"net/http"
	"github.com/labstack/echo/v4"
	"github.com/dashotv/rift/internal/database"
	<%= for (importPath, name) in def.Imports { %>
	<%= name %> "<%= importPath %>"
	<% } %>
)

func setupDatabase(s *Server) error {
	db := &connection{
		log: s.Logger.Named("db"),
	}
	<%= for (object) in def.Objects { %>
	<%= if (object.Metadata["model"] == "true") { %>
	if col, err := grimoire.New[*<%= object.Name %>](s.Mongo, s.Name, strings.ToLower("<%= object.Name %>")); err != nil {
		return fmt.Errorf("failed to create <%= object.Name %> collection: %w", err)
	} else {
		db.<%= object.Name %> = col
	}
	<% } %>
	<% } %>
	return nil
}

type connection struct {
	log *zap.SugaredLogger
	<%= for (object) in def.Objects { %>
	<%= if (object.Metadata["model"] == "true") { %>
	<%= object.Name %> *grimoire.Store[*<%= object.Name %>]
	<% } %>
	<% } %>
}

<%= for (object) in def.Objects { %>
<%= format_comment_text(object.Comment) %>type <%= object.Name %> struct {
	<%= if (object.Metadata["model"] == "true") { %>*grimoire.Document<% } %>
	<%= for (field) in object.Fields { %><%= format_comment_text(field.Comment) %><%= field.Name %> <%= if (field.Type.Multiple == true) { %>[]<% } %><%= field.Type.TypeName %> `json:"<%= field.NameLowerCamel %><%= if (field.OmitEmpty) { %>,omitempty<% } %>"`
<% } %>
}
<% } %>
